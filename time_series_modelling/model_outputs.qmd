---
title: "DART - Epidemiological model forecast outputs"
author: Tuyen Huynh
format: 
  revealjs:
    css: model_outputs_figs/styles.css
    scrollable: true
fig-cap-location: bottom
fig-width: 12
fig-height: 7
fig-align: center
crossref:
  fig-labels: arabic
  title-delim: "**.**"
---

```{r include=FALSE}
source("../utils/data_weekly.R", chdir = TRUE)
theme_set(theme_bw())

non_par_perfs <- read_csv("simple_models_perf.csv")
par_perfs <- read_csv("parametric_models_perf.csv")
glm_perfs <- read_csv("glm_models_perf.csv")

plot_covar <- function(covar_df, scale_y_label, title, extra_layers = list()) {
  covar_name <- names(covar_df)[[2]]

  covar_df %>%
    ggplot(aes(x = date, y = .data[[covar_name]])) +
    geom_line() +
    geom_smooth() +
    scale_x_yearweek(
      "Date",
      breaks = yearweek(paste0(seq(1999, 2023, 1), " W01")), minor_breaks = NULL,
      labels = as.character(seq(1999, 2023, 1))
    ) +
    scale_y_continuous(scale_y_label) +
    ggtitle(title) +
    extra_layers
}
```

# Data description

## Epidemiological data {.smaller}

-   **Source**: Ho Chi Minh City CDC
-   **Temporal coverage**: 2000 -- 2022 (inclusive)
    -   **Train set**: 2000 -- 2018
    -   **Test set**: 2019 (in 4-week chunks)
-   **Format**: Weekly aggregated admission
    -   Raw format is line listing -- each case admission is one row
-   **Spatial coverage**: Ho Chi Minh City
-   In-patient cases only
    -   out-patient data is only available from 2017

------------------------------------------------------------------------

```{r}
#| label: fig-incidence_weekly_ts
#| fig-cap: Dengue weekly incidence time series
#| echo: false
ggplot(incidence_weekly_df, aes(x = date_admitted, y = n)) +
  geom_step() +
  scale_x_yearweek(
    "Date",
    breaks = yearweek(paste0(seq(2000, 2023, 1), " W01")), minor_breaks = NULL,
    labels = as.character(seq(2000, 2023, 1))
  ) +
  scale_y_continuous("Case admitted")
```

------------------------------------------------------------------------

```{r}
#| label: fig-incidence_weekly_ts_splits
#| fig-cap: Train - test set splits
#| echo: false
incidence_weekly_df %>%
  filter_index("2000 W01" ~ "2018 W52") %>%
  ggplot(aes(x = date_admitted, y = n)) +
  geom_step() +
  geom_vline(xintercept = as.Date(yearweek("2018 W01")), color = "red") +
  scale_x_yearweek(
    "Date",
    breaks = yearweek(paste0(seq(2000, 2020, 1), " W01")), minor_breaks = NULL,
    labels = as.character(seq(2000, 2020, 1))
  ) +
  scale_y_continuous("Case admitted")
```

## Meteorological data {.smaller}

-   **Source**: ERA5 -- ECMWF atmospheric reanalysis (5th gen)
    -   **Variables**: 2m temperature, total precipitation, relative humidity
    -   All variables are daily aggregated
-   **Temporal coverage**: 1999 -- 2022 (inclusive)
    -   **Train set**: 2000 -- 2018
    -   **Test set**: 2019
-   Temporal resolution: Daily
-   Spatial coverage: Ho Chi Minh City\*

*\* cropped by Ho Chi Minh City 10km buffer bounding box and then spatially aggregated in R*

------------------------------------------------------------------------

```{r}
#| label: fig-t2m_weekly_ts
#| fig-cap: Weekly mean 2m temperature
#| echo: false
plot_covar(hcmc_temp_df, "Temperature (°C)", NULL)
```

------------------------------------------------------------------------

```{r}
#| label: fig-precip_weekly_ts
#| fig-cap: Weekly total precipitation
#| echo: false
plot_covar(hcmc_precip_df, "Precipitation (mm)", NULL)
```

------------------------------------------------------------------------

```{r}
#| label: fig-rh_weekly_ts
#| fig-cap: Weekly mean relative humidity
#| echo: false
plot_covar(hcmc_rh_df, "Relative Humidity (%)", NULL)
```

------------------------------------------------------------------------

## Models {.smaller}

::: columns
::: {.column width="50%"}
-   Non-parametric models

    -   Mean
    -   Seasonal mean
    -   Naïve
    -   Drift
    -   Seasonal Naïve
:::

::: {.column width="50%"}
-   Parametric models

    -   ARIMA family
    -   Facebook Prophet
        -   With exogenous regressors
        -   With holidays
    -   GLM regression
        -   Poisson
        -   Negative binomial
:::
:::

<br/>

Credit: Hyndman, R.J., & Athanasopoulos, G. (2021) Forecasting: principles and practice, 3rd edition, OTexts: Melbourne, Australia. OTexts.com/fpp3

------------------------------------------------------------------------

## Forecast strategy {.smaller}

**What we want**: 1-4 weeks ahead forecasting

**How do we achieve it**:

-   Recursive Multiple Input Single Output (MISO)
-   Direct MISO
-   Multiple Input Multiple Output

<br/>

::: columns
::: {.column width="33%"}
![](model_outputs_figs/recur_miso.png){fig-align="center"}
:::

::: {.column width="33%"}
![](model_outputs_figs/direct_miso.png){fig-align="center"}
:::

::: {.column width="33%"}
![](model_outputs_figs/mimo.png){fig-align="center"}
:::
:::

------------------------------------------------------------------------

## Forecast strategy {.smaller}

How do we do this for a whole year:

<br/>

::: columns
::: {.column width="50%"}
![](model_outputs_figs/mrdp_forecast_sep.png){fig-align="center"}
:::

::: {.column width="50%"}
![](model_outputs_figs/mrdp_forecast.png){fig-align="center"}

Forecasting step: 1 week

Sliding step: 4 weeks
:::
:::

------------------------------------------------------------------------

## Forecast strategy {.smaller}

Performance assessment:

- Root Mean Squared Error (RMSE): calculate mean RMSE for each 4-week forecast chunks and calculate mean RMSE of the whole model.
- Continuous Ranked Probability Score (CRPS): calculated using the probabilistic forecast instead of the point forecast. 

# Non-parametric models

## Mean {.smaller}

The forecasts of future values are all equaled to the mean of the historical values.

${\hat{y}}_{T+h|T}={\bar{y}}=(y_{1}+\cdot\cdot\cdot+y_{T})/T$

![4 week forecast - MEAN](svgs/forecast_mean_4w.svg){#fig-mean fig-align="center"}

## Seasonal mean {.smaller}

The forecasts of future timepoints are all equaled to the mean of the historical timepoints in previous seasons.

![4 week forecast - Seasonal mean](svgs/forecast_smean_4w.svg){#fig-smean fig-align="center"}

## Naïve {.smaller}

The forecasts of future values are all equaled to the latest historical value.

${\hat{y}}_{T+h|T}=y_T$

![4 week forecast - NAIVE](svgs/forecast_naive_4w.svg){#fig-naive fig-align="center"}

## Drift {.smaller}

Same as naïve, but the forecasts can increase or decrease depends on average change in historical data.

$\hat{y}_{T+h|T}=y_{T}+\frac{h}{T-1}\sum_{t=2}^{T}(y_{t}-y_{t-1})=y_{T}+h\left(\frac{y_{T}-y_{1}}{T-1}\right)$

![4 week forecast - Drift](svgs/forecast_drift_4w.svg){#fig-drift fig-align="center"}

## Seasonal naïve {.smaller}

The forecasts of future time points are all equaled to the its historical value **last season**.

${\hat{y}}_{T+h|T}=y_{T+h-m(k+1)}$

![4 week forecast - SNAIVE](svgs/forecast_snaive_4w.svg){#fig-snaive fig-align="center"}

## Non-parametric models' performances {.smaller}

```{r}
knitr::kable(non_par_perfs, format = "html")
```

# Parametric models

## ARIMA family {.smaller}

-   AR -- **A**uto**r**egressive
-   MA -- **M**oving **A**verage
-   ARIMA -- **A**uto**r**egressive **I**ntegrated **M**oving **A**verage
-   ARIMAX - **A**uto**r**egressive **I**ntegrated **M**oving **A**verage with e**x**ogenous variables
-   SARIMA -- **S**easonal **A**uto**r**egressive **I**ntegrated **M**oving **A**verage
-   SARIMAX - **S**easonal **A**uto**r**egressive **I**ntegrated **M**oving **A**verage with e**x**ogenous variables

## Autoregressive {.smaller}

Forecasts are a linear combination of historical values.

$y_{t}=c+\phi_{1}y_{t-1}+\phi_{2}y_{t-2}+\cdot\cdot\cdot\cdot\cdot+\phi_{p}y_{t-p}+\varepsilon_{t}$

![4 week forecast - AR(10)](svgs/forecast_ar10.svg){#fig-ar10 fig-align="center"}

## Moving Average {.smaller}

Forecasts are a linear combination of past forecast errors

$y_{t}=c+\varepsilon_{t}+\theta_{1}\varepsilon_{t-1}+\theta_{2}\varepsilon_{t-2}+\cdot\cdot\cdot\cdot+\theta_{q}\varepsilon_{t-q}$

![4 week forecast - MA(6)](svgs/forecast_ma6.svg){#fig-ma6 fig-align="center"}

## ARIMA {.smaller}

AR and MA orders are automatically searched.

$y_{t}^{\prime}=c+\phi_{1}y_{t-1}^{\prime}+\cdot\cdot\cdot+\phi_{p}y_{t-p}^{\prime}+\theta_{1}\varepsilon_{t-1}+\cdot\cdot\cdot+\theta_{q}\varepsilon_{t-q}+\varepsilon_{t}$

![4 week forecast - ARIMA(3,1,3)](svgs/forecast_arima.svg){#fig-arima fig-align="center"}

## ARIMAX {.smaller}

Same setup as ARIMA but now with weather covariables

![4 week forecast - ARIMA(3,1,3) + mean 2m temperature](svgs/forecast_arimax_t2m.svg){#fig-arimax_t2m fig-align="center"}


![4 week forecast - ARIMA(3,1,3) + total precipitation](svgs/forecast_arimax_precip.svg){#fig-arimax_precip fig-align="center"}


![4 week forecast - ARIMA(2,1,4) + mean relative humidity](svgs/forecast_arimax_rh.svg){#fig-arimax_rh fig-align="center"}


## ARIMAX {.smaller}

What if all the covariables are combined?

::: columns
::: {.column width="50%"}
![4 week forecast - ARIMA(3,1,3) + t2m + tp](svgs/forecast_arimax_t2m_precip.svg){#fig-arimax_t2m_precip fig-align="center"}

![4 week forecast - ARIMA(2,1,4) + tp + rh](svgs/forecast_arimax_precip_rh.svg){#fig-arimax_precip_rh fig-align="center"}

:::

::: {.column width="50%"}
![4 week forecast - ARIMA(3,1,3) + t2m + rh](svgs/forecast_arimax_t2m_rh.svg){#fig-arimax_t2m_rh fig-align="center"}

![4 week forecast - ARIMA(3,1,3) + t2m + tp + rh](svgs/forecast_arimax_weather.svg){#fig-arimax_weather fig-align="center"}

:::

:::


## SARIMA {.smaller}

![4 week forecast - SARIMA(1,0,1)(1,1,0)](svgs/forecast_sarima.svg){#fig-sarima fig-align="center"}


## SARIMAX {.smaller}

::: columns

::: {.column width="50%"}
![4 week forecast - SARIMA(1,1,0)(1,0,2) + mean 2m temperature](svgs/forecast_sarimax_t2m.svg){#fig-sarimax_t2m fig-align="center"}


![4 week forecast - SARIMA(1,0,1)(1,1,0) + total precipitation](svgs/forecast_sarimax_precip.svg){#fig-sarimax_precip fig-align="center"}

:::

::: {.column width="50%"}

![4 week forecast - SARIMA(1,0,1)(1,1,0) + mean relative humidity](svgs/forecast_sarimax_rh.svg){#fig-sarimax_rh fig-align="center"}

![4 week forecast - ARIMA(3,1,3) + t2m + tp + rh](svgs/forecast_sarimax_weather.svg){#fig-sarimax_weather fig-align="center"}

:::

:::


## ARIMA-family models' performances {.smaller}

```{r}
knitr::kable(par_perfs %>% filter(!startsWith(model, "Prophet")), format = "html")
```


## Prophet

::: columns
::: {.column width="50%"}

![4 week forecast - Prophet additive](svgs/forecast_prophet_addi.svg){#fig-prophet_addi fig-align="center"}

:::

::: {.column width="50%"}

![4 week forecast - Prophet multiplicative](svgs/forecast_prophet_multi.svg){#fig-prophet_multi fig-align="center"}

:::

:::


## Prophet with exogenous regressors

![4 week forecast - Prophet additive + mean 2m temperature temperature](svgs/forecast_prophet_t2m.svg){#fig-prophet_t2m fig-align="center"}


![4 week forecast - Prophet additive + total precipitation precipitation](svgs/forecast_prophet_precip.svg){#fig-prophet_precip fig-align="center"}


![4 week forecast - Prophet additive + mean relative humidity humidity](svgs/forecast_prophet_rh.svg){#fig-prophet_rh fig-align="center"}

## Prophet with holidays

![Incidence time series with holidays](svgs/weekly_incidence_w_holiday.svg){#fig-holidays fig-align="center"}

## Prophet with holidays

![4 week forecast - Prophet additive + holidays](svgs/forecast_prophet_holiday.svg){#fig-prophet_holiday fig-align="center"}

## Prophet models' performances {.smaller}

```{r}
knitr::kable(par_perfs %>% filter(startsWith(model, "Prophet")), format = "html")
```

## Poisson regression

![4 week forecast - Poisson regression 1-week lag](svgs/forecast_poisson_l1w.svg){#fig-poi_auto_1wl fig-align="center"}

## Poisson regression - different auto lags

![4 week forecast - Poisson regression different auto lags](svgs/forecast_poisson_all_lags.svg){#fig-poi_auto_all fig-align="center"}

## Poisson regression - temperature lags

![4 week forecast - Poisson regression 1-week lag, different temperature lags](svgs/forecast_poisson_all_t2m_lags.svg){#fig-poi_t2m_lags fig-align="center"}

## Poisson regression - precipitation lags

![4 week forecast - Poisson regression 1-week lag, different precipitation lags](svgs/forecast_poisson_all_precip_lags.svg){#fig-poi_precip_lags fig-align="center"}


## Poisson regression - relative humidity lags

![4 week forecast - Poisson regression 1-week lag, different relative humidity lags](svgs/forecast_poisson_all_rh_lags.svg){#fig-poi_rh_lags fig-align="center"}

## Poisson regression - all covariables lagged

![4 week forecast - Poisson regression 1-week lag, all covariables best lags](svgs/forecast_poisson_all_covar_lags.svg){#fig-poi_all_covar_lags fig-align="center"}

## Poisson regression - all covariables lagged {.smaller}

Model performance:
![4 week forecast - Poisson regression 1-week lag, all covariables best lags - model performance](svgs/forecast_poisson_all_covar_lags_perf.svg){#fig-poi_all_covar_lags_perf fig-align="center"}

## Poisson regression models' performances {.smaller}

```{r}
knitr::kable(glm_perfs, format = "html")
```
